name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CI: true
  NODE_ENV: development
  PORT: 3000
  MONGODB_URL: mongodb://127.0.0.1:27017/test

jobs:

  client-tests:
    runs-on: ${{ matrix.os }}
    env:
      REACT_APP_FIREBASE_API_KEY: asdf
      REACT_APP_FIREBASE_AUTH_DOMAIN: asdf
      REACT_APP_FIREBASE_PROJECT_ID: asdf
      REACT_APP_FIREBASE_STORAGE_BUCKET: asdf
      REACT_APP_FIREBASE_MESSAGING_SENDER_ID: asdf
      REACT_APP_FIREBASE_APP_ID: asdf
      REACT_APP_FIREBASE_MEASUREMENT_ID: asdf
      API_URL: asdf
      working-directory: ./client
      working-directory: ./client
    strategy:
      fail-fast: false
      matrix:
        node: ['16']
        os: [ubuntu-latest]

    services:
      mongodb:
          image: mongo
          env:
            MONGO_INITDB_ROOT_USERNAME: test
            MONGO_INITDB_ROOT_PASSWORD: password
            MONGO_INITDB_DATABASE: test
          options: >-
            --health-cmd mongo
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            - 27017:27017

    name: Node ${{ matrix.node }} on ${{ matrix.os }}
    steps:
      - name: ‚ôªÔ∏è Check out Git Repository
        uses: actions/checkout@v2

      - name: üîñ  Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: ‚¨áÔ∏è  Install npm dependencies
        run: npm install

      - name: üßΩ Lint all files
        run: npm run lint:staged

      - name: ‚úÖ  Run tests
        run: npm run test -- --coverage

  server-tests:
    runs-on: ${{ matrix.os }}
    env:
      FRONTEND_URL: http://localhost:3000
      working-directory: ./server
    strategy:
      fail-fast: false
      matrix:
        node: ['12', '14', '16']
        os: [ubuntu-latest]

    services:
      mongodb:
          image: mongo
          env:
            MONGO_INITDB_ROOT_USERNAME: test
            MONGO_INITDB_ROOT_PASSWORD: password
            MONGO_INITDB_DATABASE: test
          options: >-
            --health-cmd mongo
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            - 27017:27017

    name: Node ${{ matrix.node }} on ${{ matrix.os }}
    steps:
      - name: ‚ôªÔ∏è Check out Git Repository
        uses: actions/checkout@v2

      - name: üîñ  Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: ‚¨áÔ∏è  Install npm dependencies
        run: npm install

      - name: üßΩ Lint all files
        run: npm run lint:staged

      - name: ‚úÖ  Run tests
        run: npm run test -- --coverage