name: deploy

on:
  workflow_call:
    secrets:
      EC2_REMOTE_HOST:
        required: true
      EC2_REMOTE_USER:
        required: true
      EC2_SSH_KEY:
        required: true
      EC2_PASSPHRASE:
        required: true
      EC2_PORT:
        required: true
      DOCKER_CONTAINER_NAME:
        required: true
      DOCKER_HUB_REPO:
        required: true

jobs:

  deploy:
    runs-on: ubuntu-latest
    name: EC2 Deploy
    steps:
      - name: ♻️ Check out Git Repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Deploy to EC2 Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_REMOTE_HOST }}
          username: ${{ secrets.EC2_REMOTE_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          passphrase: ${{ secrets.EC2_PASSPHRASE }}
          port: 22
          script_stop: true
          script: |
            RED='\033[0;31m'
            GREEN='\033[0;32m'
            NC='\033[0m' # No Color
            echo -e "$GREEN Starting EC2 deployment script $NC"

            docker kill $(docker ps -q)
            docker rm $(docker ps -a -q)
            echo -e "$GREEN Successfully stopped all docker containers $NC \n"

            docker rmi $(docker images -q)
            echo -e "$GREEN Successfully removed all docker images $NC \n"

            echo -e "Is there a .env file in the root directory?"
            test -e ~/.env && echo -e "$GREEN env file exists" || echo -e "$RED env file not found $NC && exit 1"

            rm -rf /${{ github.event.repository.name }}
            echo -e "$GREEN Deleted old repository folder $NC \n"

            git clone ${{ github.repository }}
            echo -e "$GREEN Successfully cloned the repository $NC \n"

            cp .env ./${{ github.event.repository.name }}/.env
            echo -e "$GREEN Duplicated the .env file $NC \n"

            cd ${{ github.event.repository.name }}

            docker-compose up --build -d

            sudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 3000

            echo -e "$GREEN Successfully started the docker container! $NC \n"

            echo -e "$GREEN EC2 deployment complete! $NC"