name: Docker CI

on:
  workflow_call:

env:
  CACHE_NAME: docker-image-cache

jobs:

  docker_build:
    name: Docker Build
    runs-on: ubuntu-latest

    steps:
      - name: "☁️ Check out Git Repository"
        uses: actions/checkout@v2

      - name: "🔧 Set up Node"
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - uses: actions/cache@v3
        id: modules-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: "📦 Install dependencies"
        if: steps.modules-cache.outputs.cache-hit != 'true'
        run: npm install

      # - name: "⚡ Cache Docker Build"
      #   uses: actions/cache@v3
      #   id: docker_cache_id
      #   with:
      #     path: docker-cache-action
      #     key: docker-${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ github.sha }}
      #     restore-keys: |
      #       docker-${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ github.sha }}

      - name: "🔧 Create .env file"
        run: |
          rm -f .env
          echo ${{ secrets.ENV_PRODUCTION }} > .env
          cp .env ./client/.env

      - name: "🏗 Build w/ Docker Compose"
        # if: steps.docker_cache_id.outputs.cache-hit != 'true'
        run: |
          docker-compose build

      - name: "🧱 Start Docker Containers"
        run: |
          docker-compose up -d

      - name: "✅ Run End-to-end tests"
        working-directory: ./__tests__
        run: npm test --if-present

      - name: "🐳 DockerHub Publish"
          run: |
            docker-compose push