name: build

on:
  workflow_call:

jobs:

  build-node:
    name: Node Build
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Check out Git Repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: üîñ Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: ‚¨áÔ∏è  Install packages
        run: npm install

      - name: üèó Build client files
        env:
          NODE_ENV: production
        run: npm run build

  # check-github-secrets:
  #   needs: [build-node]
  #   name: Verify Secrets Exist
  #   runs-on: ubuntu-latest
  #   outputs:
  #     have_secrets: ${{ steps.setvar.outputs.have_secrets }}
  #   steps:
  #     - name: ‚ôªÔ∏è Check out Git Repository
  #       uses: actions/checkout@v2
  #       with:
  #         persist-credentials: false

  # #     - id: setvar
  #       run: |
  #         if [[ "${{ secrets.DOCKER_HUB_USERNAME }}" != "" && \
  #               "${{ secrets.DOCKER_HUB_PASSWORD }}" != "" && \
  #               "${{ secrets.DOCKER_HUB_REPO }}" != "" ]]; \
  #         then
  #           echo "Secrets need to deploy were configured in the repo"
  #           echo "::set-output name=have_secrets::true"
  #         else
  #           echo "Secrets need to deploy were not configured in the repo"
  #           echo "::set-output name=have_secrets::false"
  #           run: exit 1
  #         fi

  build-docker:
    # needs: [check-github-secrets]
    needs: [build-node]
    # if: needs.check-registry-secrets.outputs.have_secrets == 'true'
    runs-on: ubuntu-latest

    name: Docker Build/Publish
    steps:
      - name: ‚ôªÔ∏è Check out Git Repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: üê≥ Publish to Docker Registry
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_REPO }}:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_REPO }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:buildcache,mode=max
