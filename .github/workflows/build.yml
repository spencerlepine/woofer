name: build

on:
  workflow_call:

jobs:

  build-node:
    name: Node Build
    runs-on: ubuntu-latest
    steps:
      - name: üèó Build client files
        env:
          NODE_ENV: production
        run: npm run build

  check-github-secrets:
    needs: [build-node]
    name: Verify Secrets Exist
    runs-on: ubuntu-latest
    outputs:
      have_secrets: ${{ steps.setvar.outputs.have_secrets }}
    steps:
      - id: setvar
        run: |
          if [[ "${{ secrets.DOCKER_USERNAME }}" != "" && \
                "${{ secrets.DOCKER_PASSWORD }}" != "" && \
                "${{ secrets.DOCKERHUB_REPO }}" != "" ]]; \
          then
            echo "Secrets need to deploy were configured in the repo"
            echo "::set-output name=have_secrets::true"
          else
            echo "Secrets need to deploy were not configured in the repo"
            echo "::set-output name=have_secrets::false"
            run: exit 1
          fi

  # Skip entire job based on secrets
  build:
    needs: [check-github-secrets]
    if: needs.check-registry-secrets.outputs.have_secrets == 'true'
    runs-on: ubuntu-latest

    name: Docker Publish
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: üê≥ Publish to Docker Registry
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_REPO }}:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_REPO }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:buildcache,mode=max
